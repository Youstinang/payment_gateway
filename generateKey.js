// Load the 'crypto' module to use cryptographic functionalities in Node.js.
//imports the crypto module in Node.js, which provides cryptographic functionalities such as encryption, decryption, and generating random bytes
const crypto = require('crypto');

// Generate random bytes asynchronously. This is used for creating a secure secret key.
crypto.randomBytes(32, (err, buffer) => {
  // This function is a callback that handles what to do after the random bytes are generated.
  //calling the randomBytes function from the crypto module. This function generates random bytes asynchronously.
  //The 32 parameter specifies the number of bytes to generate, and the function takes a callback function as its second argument
  
  // Check if there was an error during the generation of random bytes.
  //If an error occurred, the throw keyword stops the execution of the program and displays the error
  if (err) throw err;  // If there is an error, stop execution and show the error.
  
  // If no error, convert the binary data (buffer) into a hexadecimal string.
  //If no error occurred, this line converts the binary data (buffer) generated by randomBytes into a hexadecimal string using the toString method with the 'hex' encoding.
  //Then, it prints the generated secret key to the console
  console.log('Secret Key:', buffer.toString('hex'));
  // Print the generated secret key to the console.
});
